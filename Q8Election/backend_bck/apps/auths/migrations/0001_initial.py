# Generated by Django 4.2.2 on 2023-11-24 17:53

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import helper.validators


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('deleted', models.BooleanField(default=False)),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(blank=True, max_length=150)),
                ('last_name', models.CharField(blank=True, max_length=150)),
                ('image', models.ImageField(blank=True, null=True, upload_to='users/')),
                ('background', models.ImageField(blank=True, null=True, upload_to='background/')),
                ('civil', models.CharField(blank=True, max_length=12, null=True, validators=[django.core.validators.RegexValidator(message='Civil must be exactly 12 digits.', regex='^\\d{12}$')])),
                ('gender', models.IntegerField(blank=True, choices=[(0, 'Undefined'), (1, 'رجال'), (2, 'نساء')], null=True)),
                ('date_of_birth', models.DateField(blank=True, null=True, validators=[django.core.validators.MaxValueValidator(limit_value=helper.validators.today)])),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('phone', models.CharField(blank=True, max_length=8, null=True, validators=[django.core.validators.RegexValidator(message='phone must be exactly 8 digits.', regex='^\\d{8}$')])),
                ('twitter', models.CharField(blank=True, max_length=150)),
                ('instagram', models.CharField(blank=True, max_length=150)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, help_text='The user who created this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created', to=settings.AUTH_USER_MODEL, verbose_name='Created by')),
                ('deleted_by', models.ForeignKey(blank=True, help_text='The user who deleted this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_deleted', to=settings.AUTH_USER_MODEL, verbose_name='Deleted by')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('updated_by', models.ForeignKey(blank=True, help_text='The user who updated this object.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated', to=settings.AUTH_USER_MODEL, verbose_name='Updated by')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'User',
                'db_table': 'auth_user',
                'permissions': [('canViewUser', 'Can View User'), ('canAddUser', 'Can Add User'), ('canChangeUser', 'Can Change User'), ('canDeleteUser', 'Can Delete User')],
                'default_permissions': [],
            },
        ),
    ]
